// <auto-generated />
using System;
using Apollo.Bp.Net.Card.Data.DbContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Apollo.Bp.Net.Card.Data.Migrations
{
    [DbContext(typeof(CardDbContext))]
    [Migration("20220630095947_ChangeCardFieldTypes")]
    partial class ChangeCardFieldTypes
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("Apollo.Bp.Net.Card.Core.Entities.Card", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("AccountId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("account_id");

                    b.Property<string>("Barcode")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)")
                        .HasColumnName("barcode");

                    b.Property<Guid>("CardProductToken")
                        .HasColumnType("uuid")
                        .HasColumnName("card_product_token");

                    b.Property<string>("CarrierReturnWindowName")
                        .HasColumnType("text")
                        .HasColumnName("carrier_return_window_name");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("create_at");

                    b.Property<bool>("Expedite")
                        .HasColumnType("boolean")
                        .HasColumnName("expedite");

                    b.Property<string>("Expiration")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("expiration");

                    b.Property<DateTime?>("ExpirationTime")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("expiration_time");

                    b.Property<string>("FulfillmentStatus")
                        .HasColumnType("text")
                        .HasColumnName("fulfillment_status");

                    b.Property<string>("ImagesCardName")
                        .HasColumnType("text")
                        .HasColumnName("images_card_name");

                    b.Property<string>("ImagesCardSignature")
                        .HasColumnType("text")
                        .HasColumnName("images_card_signature");

                    b.Property<string>("ImagesCardThermalColor")
                        .HasColumnType("text")
                        .HasColumnName("images_card_thermal_color");

                    b.Property<string>("InstrumentType")
                        .HasColumnType("text")
                        .HasColumnName("instrument_type");

                    b.Property<string>("LastFour")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("last_four");

                    b.Property<string>("LogoFile")
                        .HasColumnType("text")
                        .HasColumnName("logo_file");

                    b.Property<string>("LogoThumbnailFile")
                        .HasColumnType("text")
                        .HasColumnName("logo_thumbnail_file");

                    b.Property<string>("MessageFile")
                        .HasColumnType("text")
                        .HasColumnName("message_file");

                    b.Property<string>("MessageLine")
                        .HasColumnType("text")
                        .HasColumnName("message_line");

                    b.Property<string>("Metadata")
                        .HasColumnType("text")
                        .HasColumnName("metadata");

                    b.Property<string>("Pan")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("pan");

                    b.Property<Guid>("PartyId")
                        .HasColumnType("uuid")
                        .HasColumnName("party_id");

                    b.Property<string>("PersoType")
                        .HasColumnType("text")
                        .HasColumnName("perso_type");

                    b.Property<bool>("PinIsSet")
                        .HasColumnType("boolean")
                        .HasColumnName("pin_is_set");

                    b.Property<string>("ReasonCode")
                        .HasMaxLength(2)
                        .HasColumnType("character varying(2)")
                        .HasColumnName("reason_code");

                    b.Property<string>("RecipientAddress1")
                        .HasColumnType("text")
                        .HasColumnName("recipient_address1");

                    b.Property<string>("RecipientAddress2")
                        .HasColumnType("text")
                        .HasColumnName("recipient_address2");

                    b.Property<string>("RecipientCity")
                        .HasColumnType("text")
                        .HasColumnName("recipient_city");

                    b.Property<string>("RecipientCountry")
                        .HasColumnType("text")
                        .HasColumnName("recipient_country");

                    b.Property<string>("RecipientFirstName")
                        .HasColumnType("text")
                        .HasColumnName("recipient_first_name");

                    b.Property<string>("RecipientLastName")
                        .HasColumnType("text")
                        .HasColumnName("recipient_last_name");

                    b.Property<string>("RecipientMiddleName")
                        .HasColumnType("text")
                        .HasColumnName("recipient_middle_name");

                    b.Property<string>("RecipientPhone")
                        .HasColumnType("text")
                        .HasColumnName("recipient_phone");

                    b.Property<string>("RecipientPostalCode")
                        .HasColumnType("text")
                        .HasColumnName("recipient_postal_code");

                    b.Property<string>("RecipientState")
                        .HasColumnType("text")
                        .HasColumnName("recipient_state");

                    b.Property<string>("ReturnAddress1")
                        .HasColumnType("text")
                        .HasColumnName("return_address1");

                    b.Property<string>("ReturnAddress2")
                        .HasColumnType("text")
                        .HasColumnName("return_address2");

                    b.Property<string>("ReturnCity")
                        .HasColumnType("text")
                        .HasColumnName("return_city");

                    b.Property<string>("ReturnCountry")
                        .HasColumnType("text")
                        .HasColumnName("return_country");

                    b.Property<string>("ReturnFirstName")
                        .HasColumnType("text")
                        .HasColumnName("return_first_name");

                    b.Property<string>("ReturnLastName")
                        .HasColumnType("text")
                        .HasColumnName("return_last_name");

                    b.Property<string>("ReturnMiddleName")
                        .HasColumnType("text")
                        .HasColumnName("return_middle_name");

                    b.Property<string>("ReturnPhone")
                        .HasColumnType("text")
                        .HasColumnName("return_phone");

                    b.Property<string>("ReturnPostalCode")
                        .HasColumnType("text")
                        .HasColumnName("return_postal_code");

                    b.Property<string>("ReturnState")
                        .HasColumnType("text")
                        .HasColumnName("return_state");

                    b.Property<string>("ShippingCareOfLine")
                        .HasColumnType("text")
                        .HasColumnName("shipping_care_of_line");

                    b.Property<string>("ShippingMethod")
                        .HasColumnType("text")
                        .HasColumnName("shipping_method");

                    b.Property<string>("State")
                        .HasColumnType("text")
                        .HasColumnName("state");

                    b.Property<string>("StateReason")
                        .HasColumnType("text")
                        .HasColumnName("state_reason");

                    b.Property<string>("TemplateId")
                        .HasColumnType("text")
                        .HasColumnName("template_id");

                    b.Property<string>("TextNameLine1")
                        .HasColumnType("text")
                        .HasColumnName("text_name_line1");

                    b.Property<string>("TextNameLine2")
                        .HasColumnType("text")
                        .HasColumnName("text_name_line2");

                    b.Property<string>("TextNameLine3")
                        .HasColumnType("text")
                        .HasColumnName("text_name_line3");

                    b.Property<Guid>("Token")
                        .HasColumnType("uuid")
                        .HasColumnName("token");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("update_at");

                    b.HasKey("Id");

                    b.ToTable("cards");
                });
#pragma warning restore 612, 618
        }
    }
}
